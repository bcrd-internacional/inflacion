map(~html_elements(.x, 'div div div:nth-child(2)') %>% html_text)
colors
intensity <- colors_grid %>%
map(~html_elements(.x, 'div div div:nth-child(1)') %>% html_text)
intensity
palettes <- map2(colors, intensity, ~setNames(.x, .y))
palettes
palettes <- list(
Slate = c(
`50` = "#F8FAFC", `100` = "#F1F5F9", `200` = "#E2E8F0", `300` = "#CBD5E1",
`400` = "#94A3B8", `500` = "#64748B", `600` = "#475569", `700` = "#334155",
`800` = "#1E293B", `900` = "#0F172A"
),
Gray = c(
`50` = "#F9FAFB", `100` = "#F3F4F6", `200` = "#E5E7EB", `300` = "#D1D5DB",
`400` = "#9CA3AF", `500` = "#6B7280", `600` = "#4B5563", `700` = "#374151",
`800` = "#1F2937", `900` = "#111827"
),
Zinc = c(
`50` = "#FAFAFA", `100` = "#F4F4F5", `200` = "#E4E4E7", `300` = "#D4D4D8",
`400` = "#A1A1AA", `500` = "#71717A", `600` = "#52525B", `700` = "#3F3F46",
`800` = "#27272A", `900` = "#18181B"
),
Neutral = c(
`50` = "#FAFAFA", `100` = "#F5F5F5", `200` = "#E5E5E5", `300` = "#D4D4D4",
`400` = "#A3A3A3", `500` = "#737373", `600` = "#525252", `700` = "#404040",
`800` = "#262626", `900` = "#171717"
),
Stone = c(
`50` = "#FAFAF9", `100` = "#F5F5F4", `200` = "#E7E5E4", `300` = "#D6D3D1",
`400` = "#A8A29E", `500` = "#78716C", `600` = "#57534E", `700` = "#44403C",
`800` = "#292524", `900` = "#1C1917"
),
Red = c(
`50` = "#FEF2F2", `100` = "#FEE2E2", `200` = "#FECACA", `300` = "#FCA5A5",
`400` = "#F87171", `500` = "#EF4444", `600` = "#DC2626", `700` = "#B91C1C",
`800` = "#991B1B", `900` = "#7F1D1D"
),
Orange = c(
`50` = "#FFF7ED", `100` = "#FFEDD5", `200` = "#FED7AA", `300` = "#FDBA74",
`400` = "#FB923C", `500` = "#F97316", `600` = "#EA580C", `700` = "#C2410C",
`800` = "#9A3412", `900` = "#7C2D12"
),
Amber = c(
`50` = "#FFFBEB", `100` = "#FEF3C7", `200` = "#FDE68A", `300` = "#FCD34D",
`400` = "#FBBF24", `500` = "#F59E0B", `600` = "#D97706", `700` = "#B45309",
`800` = "#92400E", `900` = "#78350F"
),
Yellow = c(
`50` = "#FEFCE8", `100` = "#FEF9C3", `200` = "#FEF08A", `300` = "#FDE047",
`400` = "#FACC15", `500` = "#EAB308", `600` = "#CA8A04", `700` = "#A16207",
`800` = "#854D0E", `900` = "#713F12"
),
Lime = c(
`50` = "#F7FEE7", `100` = "#ECFCCB", `200` = "#D9F99D", `300` = "#BEF264",
`400` = "#A3E635", `500` = "#84CC16", `600` = "#65A30D", `700` = "#4D7C0F",
`800` = "#3F6212", `900` = "#365314"
),
Green = c(
`50` = "#F0FDF4", `100` = "#DCFCE7", `200` = "#BBF7D0", `300` = "#86EFAC",
`400` = "#4ADE80", `500` = "#22C55E", `600` = "#16A34A", `700` = "#15803D",
`800` = "#166534",  `900` = "#14532D"
),
Emerald = c(
`50` = "#ECFDF5", `100` = "#D1FAE5", `200` = "#A7F3D0", `300` = "#6EE7B7",
`400` = "#34D399", `500` = "#10B981", `600` = "#059669", `700` = "#047857",
`800` = "#065F46", `900` = "#064E3B"
),
Teal = c(
`50` = "#F0FDFA", `100` = "#CCFBF1", `200` = "#99F6E4", `300` = "#5EEAD4",
`400` = "#2DD4BF", `500` = "#14B8A6", `600` = "#0D9488", `700` = "#0F766E",
`800` = "#115E59", `900` = "#134E4A"
),
Cyan = c(
`50` = "#ECFEFF", `100` = "#CFFAFE", `200` = "#A5F3FC", `300` = "#67E8F9",
`400` = "#22D3EE", `500` = "#06B6D4", `600` = "#0891B2", `700` = "#0E7490",
`800` = "#155E75", `900` = "#164E63"
),
Sky = c(
`50` = "#F0F9FF", `100` = "#E0F2FE", `200` = "#BAE6FD", `300` = "#7DD3FC",
`400` = "#38BDF8", `500` = "#0EA5E9", `600` = "#0284C7", `700` = "#0369A1",
`800` = "#075985", `900` = "#0C4A6E"
),
Blue = c(
`50` = "#EFF6FF", `100` = "#DBEAFE", `200` = "#BFDBFE", `300` = "#93C5FD",
`400` = "#60A5FA", `500` = "#3B82F6", `600` = "#2563EB", `700` = "#1D4ED8",
`800` = "#1E40AF", `900` = "#1E3A8A"
),
Indigo = c(
`50` = "#EEF2FF", `100` = "#E0E7FF", `200` = "#C7D2FE", `300` = "#A5B4FC",
`400` = "#818CF8", `500` = "#6366F1", `600` = "#4F46E5", `700` = "#4338CA",
`800` = "#3730A3", `900` = "#312E81"
),
Violet = c(
`50` = "#F5F3FF", `100` = "#EDE9FE", `200` = "#DDD6FE", `300` = "#C4B5FD",
`400` = "#A78BFA", `500` = "#8B5CF6",`600` = "#7C3AED", `700` = "#6D28D9",
`800` = "#5B21B6", `900` = "#4C1D95"
),
Purple = c(
`50` = "#FAF5FF", `100` = "#F3E8FF", `200` = "#E9D5FF", `300` = "#D8B4FE",
`400` = "#C084FC", `500` = "#A855F7", `600` = "#9333EA",  `700` = "#7E22CE",
`800` = "#6B21A8", `900` = "#581C87"
),
Fuchsia = c(
`50` = "#FDF4FF", `100` = "#FAE8FF", `200` = "#F5D0FE", `300` = "#F0ABFC",
`400` = "#E879F9", `500` = "#D946EF", `600` = "#C026D3", `700` = "#A21CAF",
`800` = "#86198F", `900` = "#701A75"
),
Pink = c(
`50` = "#FDF2F8", `100` = "#FCE7F3", `200` = "#FBCFE8", `300` = "#F9A8D4",
`400` = "#F472B6", `500` = "#EC4899", `600` = "#DB2777", `700` = "#BE185D",
`800` = "#9D174D", `900` = "#831843"
),
Rose = c(
`50` = "#FFF1F2", `100` = "#FFE4E6", `200` = "#FECDD3", `300` = "#FDA4AF",
`400` = "#FB7185", `500` = "#F43F5E", `600` = "#E11D48", `700` = "#BE123C",
`800` = "#9F1239", `900` = "#881337"
)
)
palettes_wide <- as.data.frame(palettes) %>%
mutate(intensity = as.numeric(row.names(.))) %>%
select(intensity, everything()) %>%
as_tibble()
palettes_wide
palettes_long <- palettes_wide %>%
pivot_longer(-intensity, 'hue', 'color')
palettes_long
palettes
dput(palettes)
library(magrittr)
palettes <- list(
Slate = c(
`50` = "#F8FAFC", `100` = "#F1F5F9", `200` = "#E2E8F0", `300` = "#CBD5E1",
`400` = "#94A3B8", `500` = "#64748B", `600` = "#475569", `700` = "#334155",
`800` = "#1E293B", `900` = "#0F172A"
),
Gray = c(
`50` = "#F9FAFB", `100` = "#F3F4F6", `200` = "#E5E7EB", `300` = "#D1D5DB",
`400` = "#9CA3AF", `500` = "#6B7280", `600` = "#4B5563", `700` = "#374151",
`800` = "#1F2937", `900` = "#111827"
),
Zinc = c(
`50` = "#FAFAFA", `100` = "#F4F4F5", `200` = "#E4E4E7", `300` = "#D4D4D8",
`400` = "#A1A1AA", `500` = "#71717A", `600` = "#52525B", `700` = "#3F3F46",
`800` = "#27272A", `900` = "#18181B"
),
Neutral = c(
`50` = "#FAFAFA", `100` = "#F5F5F5", `200` = "#E5E5E5", `300` = "#D4D4D4",
`400` = "#A3A3A3", `500` = "#737373", `600` = "#525252", `700` = "#404040",
`800` = "#262626", `900` = "#171717"
),
Stone = c(
`50` = "#FAFAF9", `100` = "#F5F5F4", `200` = "#E7E5E4", `300` = "#D6D3D1",
`400` = "#A8A29E", `500` = "#78716C", `600` = "#57534E", `700` = "#44403C",
`800` = "#292524", `900` = "#1C1917"
),
Red = c(
`50` = "#FEF2F2", `100` = "#FEE2E2", `200` = "#FECACA", `300` = "#FCA5A5",
`400` = "#F87171", `500` = "#EF4444", `600` = "#DC2626", `700` = "#B91C1C",
`800` = "#991B1B", `900` = "#7F1D1D"
),
Orange = c(
`50` = "#FFF7ED", `100` = "#FFEDD5", `200` = "#FED7AA", `300` = "#FDBA74",
`400` = "#FB923C", `500` = "#F97316", `600` = "#EA580C", `700` = "#C2410C",
`800` = "#9A3412", `900` = "#7C2D12"
),
Amber = c(
`50` = "#FFFBEB", `100` = "#FEF3C7", `200` = "#FDE68A", `300` = "#FCD34D",
`400` = "#FBBF24", `500` = "#F59E0B", `600` = "#D97706", `700` = "#B45309",
`800` = "#92400E", `900` = "#78350F"
),
Yellow = c(
`50` = "#FEFCE8", `100` = "#FEF9C3", `200` = "#FEF08A", `300` = "#FDE047",
`400` = "#FACC15", `500` = "#EAB308", `600` = "#CA8A04", `700` = "#A16207",
`800` = "#854D0E", `900` = "#713F12"
),
Lime = c(
`50` = "#F7FEE7", `100` = "#ECFCCB", `200` = "#D9F99D", `300` = "#BEF264",
`400` = "#A3E635", `500` = "#84CC16", `600` = "#65A30D", `700` = "#4D7C0F",
`800` = "#3F6212", `900` = "#365314"
),
Green = c(
`50` = "#F0FDF4", `100` = "#DCFCE7", `200` = "#BBF7D0", `300` = "#86EFAC",
`400` = "#4ADE80", `500` = "#22C55E", `600` = "#16A34A", `700` = "#15803D",
`800` = "#166534",  `900` = "#14532D"
),
Emerald = c(
`50` = "#ECFDF5", `100` = "#D1FAE5", `200` = "#A7F3D0", `300` = "#6EE7B7",
`400` = "#34D399", `500` = "#10B981", `600` = "#059669", `700` = "#047857",
`800` = "#065F46", `900` = "#064E3B"
),
Teal = c(
`50` = "#F0FDFA", `100` = "#CCFBF1", `200` = "#99F6E4", `300` = "#5EEAD4",
`400` = "#2DD4BF", `500` = "#14B8A6", `600` = "#0D9488", `700` = "#0F766E",
`800` = "#115E59", `900` = "#134E4A"
),
Cyan = c(
`50` = "#ECFEFF", `100` = "#CFFAFE", `200` = "#A5F3FC", `300` = "#67E8F9",
`400` = "#22D3EE", `500` = "#06B6D4", `600` = "#0891B2", `700` = "#0E7490",
`800` = "#155E75", `900` = "#164E63"
),
Sky = c(
`50` = "#F0F9FF", `100` = "#E0F2FE", `200` = "#BAE6FD", `300` = "#7DD3FC",
`400` = "#38BDF8", `500` = "#0EA5E9", `600` = "#0284C7", `700` = "#0369A1",
`800` = "#075985", `900` = "#0C4A6E"
),
Blue = c(
`50` = "#EFF6FF", `100` = "#DBEAFE", `200` = "#BFDBFE", `300` = "#93C5FD",
`400` = "#60A5FA", `500` = "#3B82F6", `600` = "#2563EB", `700` = "#1D4ED8",
`800` = "#1E40AF", `900` = "#1E3A8A"
),
Indigo = c(
`50` = "#EEF2FF", `100` = "#E0E7FF", `200` = "#C7D2FE", `300` = "#A5B4FC",
`400` = "#818CF8", `500` = "#6366F1", `600` = "#4F46E5", `700` = "#4338CA",
`800` = "#3730A3", `900` = "#312E81"
),
Violet = c(
`50` = "#F5F3FF", `100` = "#EDE9FE", `200` = "#DDD6FE", `300` = "#C4B5FD",
`400` = "#A78BFA", `500` = "#8B5CF6",`600` = "#7C3AED", `700` = "#6D28D9",
`800` = "#5B21B6", `900` = "#4C1D95"
),
Purple = c(
`50` = "#FAF5FF", `100` = "#F3E8FF", `200` = "#E9D5FF", `300` = "#D8B4FE",
`400` = "#C084FC", `500` = "#A855F7", `600` = "#9333EA",  `700` = "#7E22CE",
`800` = "#6B21A8", `900` = "#581C87"
),
Fuchsia = c(
`50` = "#FDF4FF", `100` = "#FAE8FF", `200` = "#F5D0FE", `300` = "#F0ABFC",
`400` = "#E879F9", `500` = "#D946EF", `600` = "#C026D3", `700` = "#A21CAF",
`800` = "#86198F", `900` = "#701A75"
),
Pink = c(
`50` = "#FDF2F8", `100` = "#FCE7F3", `200` = "#FBCFE8", `300` = "#F9A8D4",
`400` = "#F472B6", `500` = "#EC4899", `600` = "#DB2777", `700` = "#BE185D",
`800` = "#9D174D", `900` = "#831843"
),
Rose = c(
`50` = "#FFF1F2", `100` = "#FFE4E6", `200` = "#FECDD3", `300` = "#FDA4AF",
`400` = "#FB7185", `500` = "#F43F5E", `600` = "#E11D48", `700` = "#BE123C",
`800` = "#9F1239", `900` = "#881337"
)
)
palettes_wide <- as.data.frame(palettes) %>%
dplyr::mutate(intensity = as.numeric(row.names(.))) %>%
dplyr::select(intensity, everything()) %>%
dplyr::as_tibble()
palettes_long <- palettes_wide %>%
tidyr::pivot_longer(-intensity, 'hue', 'color')
get_tailwind_colors <- function(hue_name = 'Blue', color_intensity = c(50:900)) {
hue_name <- str_to_title(hue_name)
palettes_long %>%
dplyr::filter(hue == hue_name, intensity %in% color_intensity) %>%
dplyr::pull(value)
}
library(ggplot2)
ggplot(data = mtcars, aes(x = wt, y = mpg)) +
geom_point(color = '#9F1239', size = 5)
get_tailwind_colors('rose', color_intensity = 800)
get_tailwind_colors <- function(hue_name = 'Blue', color_intensity = c(50:900)) {
hue_name <- stringr::str_to_title(hue_name)
palettes_long %>%
dplyr::filter(hue == hue_name, intensity %in% color_intensity) %>%
dplyr::pull(value)
}
get_tailwind_colors('rose', color_intensity = 800)
get_tailwind_colors('rose', color_intensity = 500)
ggplot(data = mtcars, aes(x = wt, y = mpg)) +
geom_point(get_tailwind_colors('blue', color_intensity = 400), size = 5)
ggplot(data = mtcars, aes(x = wt, y = mpg)) +
geom_point(get_tailwind_colors('blue', color_intensity = 400), size = 5)
ggplot(data = mtcars, aes(x = wt, y = mpg)) +
geom_point(color = get_tailwind_colors('blue', color_intensity = 400), size = 5)
ggplot(data = mtcars, aes(x = wt, y = mpg)) +
geom_point(color = get_tailwind_colors('blue', color_intensity = 800), size = 5)
ggplot(data = mtcars, aes(x = wt, y = mpg)) +
geom_point(color = get_tailwind_colors('blue', color_intensity = 200), size = 5)
get_tailwind_colors('gray', c(50, 600))
get_tailwind_colors('gray', c(50:600))
ggplotly(plot_inflacion, tooltip = "text") %>%
layout(legend = list(orientation = "h", x = 0.2)) %>%
plotly::config(displayModeBar = F, responsive = TRUE)
# Paquetes ----------------------------------------------------------------
library(tidyverse)
library(dygraphs)
library(plotly)
library(ggthemes)
library(highcharter)
# Objetos utilitarios -----------------------------------------------------
source(here::here("scripts/functions.R"), encoding = "utf-8")
# Importando la data ------------------------------------------------------
ipc <- get_ipc_data()
monetary_stats <- get_monetary_stats()
# Adecuando la data -------------------------------------------------------
ipc <- ipc %>%
mutate(ipc_2y = (ipc - lag(ipc, 24)) / lag(ipc, 24) * 100) %>%
pivot_longer(
cols = contains("ipc"), names_to = "variable_key", values_to = "indicador") %>%
mutate(
variable = recode(variable_key,
"ipc" = "Índice",
"ipc_vm" = "Inflación mensual",
"ipc_vi" = "Inflación interanual",
"ipc_p12" = "Inflación promedio 12 meses",
"ipc_2y" = "Inflación a dos años",
"ipc_vd" = "Inflación con diciembre")
)
# Inflación mensaul
ipc %>%
filter(
variable_key == "ipc_vm",
fecha > "2012-06-01"
) %>%
ggplot(aes(x = fecha, y = indicador)) +
geom_line() +
theme_minimal() +
scale_y_continuous(breaks = scales::pretty_breaks(5)) +
labs(x = NULL, y = 'Porcentaje')
# Inflación a 12 y 24 meses
(plot_inflacion <- ipc %>%
filter(
variable_key %in% c("ipc_vi", "ipc_2y"),
fecha > "2012-06-01"
) %>%
mutate(label = glue::glue("{date_label(fecha)}: {round(indicador, 2)}")) %>%
ggplot(aes(x = fecha, y = indicador, color = variable, text = label,
group = variable)) +
geom_line() +
labs(x = NULL, y = NULL, color = NULL) +
theme_minimal() +
theme(legend.position = "bottom") +
scale_color_manual(values = c(
get_tailwind_colors('blue', c(700)),
get_tailwind_colors('red', c(700))
)
)
)
ggplotly(plot_inflacion, tooltip = "text") %>%
layout(legend = list(orientation = "h", x = 0.2)) %>%
plotly::config(displayModeBar = F, responsive = TRUE)
paleta <- c(
get_tailwind_colors('sky', c(300)),
get_tailwind_colors('sky', c(500)),
get_tailwind_colors('blue', c(600))
)
monetary_stats %>%
filter(nivel == 1, categoria == 'Agregados monetarios', date > '2011-12-01') %>%
mutate(short_names = fct_reorder(factor(short_names), -values)) %>%
ggplot(aes(x = date, y = values)) +
geom_area(aes(fill = short_names), alpha = .9, position = 'identity') +
geom_line(aes(group = short_names), size = 1.5, color = 'white') +
geom_line(aes(color = short_names), size = 1, show.legend = FALSE) +
scale_y_continuous(labels = scales::comma) +
labs(y = 'Millones de RD$', x = NULL, fill = NULL) +
theme_minimal() +
theme(legend.position = 'bottom') +
scale_fill_manual(values = paleta) +
scale_color_manual(values = paleta)
monetary_stats %>%
filter(nivel == 1, categoria == 'Agregados monetarios', date > '2011-12-01') %>%
mutate(
short_names = fct_reorder(factor(short_names), -values),
values = round(values, 2)
) %>%
hchart('line', hcaes(x = date, y = values, group = short_names))
monetary_stats %>%
count(categoria)
monetary_stats %>%
filter(categoria == 'Multiplicadores monetarios')
monetary_stats %>%
filter(categoria == 'Multiplicadores monetarios') %>%
ggplot(aes(x = date, y = values, color = labels)) +
geom_line()
monetary_stats %>%
filter(categoria == 'Multiplicadores monetarios', date > "2015-12-01") %>%
ggplot(aes(x = date, y = values, color = labels)) +
geom_line() +
theme_minimal() +
theme()
monetary_stats %>%
filter(categoria == 'Multiplicadores monetarios', date > "2015-12-01") %>%
ggplot(aes(x = date, y = values, color = labels)) +
geom_line() +
theme_minimal() +
theme(legend.position = 'bottom')
count(monetary_stats, categoria)
monetary_stats %>%
filter(categoria == 'Base monetaria', date > "2015-12-01")
monetary_stats %>%
filter(categoria == 'Base monetaria', date > "2015-12-01") %>%
glimpse()
monetary_stats %>%
filter(categoria == 'Base monetaria', short_names == 'base_monetaria_restringida', nivel = 2, date > "2015-12-01") %>%
glimpse()
monetary_stats %>%
filter(categoria == 'Base monetaria', short_names == 'base_monetaria_restringida', nivel == 2, date > "2015-12-01") %>%
glimpse()
monetary_stats %>%
filter(categoria == 'Base monetaria')
monetary_stats %>%
filter(categoria == 'Base monetaria') %>%
count(labels)
# detalles de las variables
{
elements <- tibble::tribble(
~original_names,                                                  ~labels,                         ~short_names,                   ~categoria, ~nivel,
"ACTIVOS INTERNACIONALES BRUTOS (Activos Externos) (US$) (1)",                                       "Activos externos",     "activos_internacionales_brutos",           "Indicadores BCRD",     1L,
"RESERVAS INTERNACIONALES BRUTAS (Activos de Reserva Oficial) (US$) (1)",                        "Reservas internacionales brutas",    "reservas_internacionales_brutas",           "Indicadores BCRD",     1L,
"RESERVAS INTERNACIONALES NETAS   (US$) (1)",                         "Reservas internacionales netas",     "reservas_internacionales_netas",           "Indicadores BCRD",     1L,
"ACTIVOS INTERNOS",                                       "Activos internos",                   "activos_internos",           "Indicadores BCRD",     1L,
"Activos frente al Gobierno Central (2)",                     "Activos frente al gobierno central",            "activos_internos_vs_gob",           "Indicadores BCRD",     2L,
"De los cuales: Bono de Capitalización (3)",             "Bonos de capitalización frente al gobierno", "activos_internos_capitalizacion_bc",           "Indicadores BCRD",     3L,
"Activos frente al Sector Privado (4)",                       "Activos frente al sector privado",       "activos_internos_vs_sprivado",           "Indicadores BCRD",     2L,
"Crédito a Otras Sociedades de Depósito (5)",                                          "Crédito a OSD",                        "credito_osd",           "Indicadores BCRD",     2L,
"VALORES EN CIRCULACION (6)",                                 "Valores en circulación",             "valores_en_circulacion",           "Indicadores BCRD",     1L,
"Descuento en Valores Emitidos",                          "Descuento en valores emitidos",               "descuento_en_valores",           "Indicadores BCRD",     2L,
"DEPOSITOS REMUNERADOS DE CORTO PLAZO",                               "Depósitos remunerados CP",        "depositos_remunerados_corto",           "Indicadores BCRD",     1L,
"BASE MONETARIA RESTRINGIDA",                             "Base monetaria restringida",         "base_monetaria_restringida",             "Base monetaria",     1L,
"Billetes y Monedas Emitidos",                            "Billetes y monedas emitidos",                   "billetes_monedas",             "Base monetaria",     2L,
"De los que: Tenencias OSD en MN",                              "Billetes y monedas en OSD",            "billetes_monedas_osd_mn",             "Base monetaria",     3L,
"Depósitos Encaje Legal y Saldos de Compensación de OSD en BC (MN)",                           "Depositos encaje legal en MN",   "depositos_encaje_compensacion_mn",             "Base monetaria",     2L,
"Valores del BCRD en posesión de las OSD para fines de encaje legal (MN)",                    "Valores del BCRD en OSD para encaje",      "valores_bcrd_en_osd_encaje_mn",             "Base monetaria",     2L,
"BASE MONETARIA AMPLIADA",                                "Base monetaria ampliada",            "base_monetaria_ampliada",             "Base monetaria",     1L,
"Base Monetaria Restringida",                             "Base monetaria restringida",                   "base_restringida",             "Base monetaria",     2L,
"Depósitos Encaje Legal y Saldos de Compensación de OSD en BC (ME)",                           "Depósitos encaje legal en ME",   "depositos_encaje_compensacion_me",             "Base monetaria",     2L,
"Depósitos Remunerados de Corto Plazo (Overnight)",                                    "Depósitos Overnight",    "depositos_remunerados_overnight",             "Base monetaria",     2L,
"Depósitos Remunerados de Corto Plazo en ME",                         "Depósitos remunerados CP en ME",           "depositos_remunerados_me",             "Base monetaria",     2L,
"Otros Depósitos de OSD en BCRD",                         "Otros depósitos de OSD en BCRD",          "otros_depositos_osd_en_bc",             "Base monetaria",     2L,
"Valores a Corto Plazo emitidos por BC en manos de las OSD (MN y ME)",                          "Valores de CP del BCRD en OSD",     "valores_corto_plazo_bc_en_osde",             "Base monetaria",     2L,
"MEDIO CIRCULANTE (M1)",                                       "Medio círculante",                                 "m1",       "Agregados monetarios",     1L,
"Billetes y monedas en poder del público",                 "Billetes y monedas en poder de público",                "billetes_monedas_pp",       "Agregados monetarios",     2L,
"Depósitos Transferibles en MN",                          "Depósitos transferibles en MN",         "depositos_transferibles_mn",       "Agregados monetarios",     2L,
"OFERTA MONETARIA AMPLIADA (M2)",                              "Oferta monetaria ampliada",                                 "m2",       "Agregados monetarios",     1L,
"Medio Circulante (M1)",                                                     "M1",                                 "m1",       "Agregados monetarios",     2L,
"Otros depósitos M/N",                                  "Otros depósitos en MN",                 "otros_depositos_mn",       "Agregados monetarios",     2L,
"Valores distintos de acciones MN-emitidos por OSD",      "Valores distintos de acciones MN-emitidos por OSD",      "valores_no_acciones_de_osd_mn",       "Agregados monetarios",     2L,
"Valores distintos de acciones MN- emitidos por el BCRD", "Valores distintos de acciones MN- emitidos por el BCRD",     "valores_no_acciones_de_bcrd_mn",       "Agregados monetarios",     2L,
"DINERO EN SENTIDO AMPLIO (M3)",                               "Dinero en sentido amplio",                                 "m3",       "Agregados monetarios",     1L,
"Oferta Monetaria Ampliada (M2)",                              "Oferta monetaria ampliada",                                 "m2",       "Agregados monetarios",     2L,
"Otros depósitos M/E",                                  "Otros depósitos en ME",                 "otros_depositos_me",       "Agregados monetarios",     2L,
"Valores distintos de acciones ME",                    "Valores distintos de acciones en ME",             "valores_no_acciones_me",       "Agregados monetarios",     2L,
"K2.1 = M1/BM restringida",                                                     "K1",                               "k2.1", "Multiplicadores monetarios",     1L,
"K2.2 = M2/BM restringida",                                                     "K2",                               "k2.2", "Multiplicadores monetarios",     1L,
"K2.3 = M3/BM ampliada",                                                     "K3",                               "k2.3", "Multiplicadores monetarios",     1L,
"TASA DE CAMBIO",                                         "Tasa de cambio",                        "tasa_cambio",             "Tipo de cambio",     1L
)
}
view(elements)
monetary_stats %>%
filter(nivel == 1, categoria == 'Agregados monetarios', date > '2011-12-01') %>%
mutate(
short_names = fct_reorder(factor(short_names), -values),
values = round(values, 2)
) %>%
hchart('line', hcaes(x = date, y = values, group = short_names))
bcdata::get_tcambio()
library(tidyverse)
bcdata::get_tcambio() %>%
mutate(brecha = tcn_venta - tcn_compra ) %>%
ggplot(aes(x = fecha, y = brecha)) +
geom_col()
bcdata::get_tcambio() %>%
filter(year > 2012) %>%
mutate(brecha = tcn_venta - tcn_compra ) %>%
ggplot(aes(x = fecha, y = brecha)) +
geom_col()
bcdata::get_tcambio() %>% tail()
# detalles de las variables
{
elements <- tibble::tribble(
~original_names,                                                  ~labels,                         ~short_names,                   ~categoria, ~nivel,
"ACTIVOS INTERNACIONALES BRUTOS (Activos Externos) (US$) (1)",                                       "Activos externos",     "activos_internacionales_brutos",           "Indicadores BCRD",     1L,
"RESERVAS INTERNACIONALES BRUTAS (Activos de Reserva Oficial) (US$) (1)",                        "Reservas internacionales brutas",    "reservas_internacionales_brutas",           "Indicadores BCRD",     1L,
"RESERVAS INTERNACIONALES NETAS   (US$) (1)",                         "Reservas internacionales netas",     "reservas_internacionales_netas",           "Indicadores BCRD",     1L,
"ACTIVOS INTERNOS",                                       "Activos internos",                   "activos_internos",           "Indicadores BCRD",     1L,
"Activos frente al Gobierno Central (2)",                     "Activos frente al gobierno central",            "activos_internos_vs_gob",           "Indicadores BCRD",     2L,
"De los cuales: Bono de Capitalización (3)",             "Bonos de capitalización frente al gobierno", "activos_internos_capitalizacion_bc",           "Indicadores BCRD",     3L,
"Activos frente al Sector Privado (4)",                       "Activos frente al sector privado",       "activos_internos_vs_sprivado",           "Indicadores BCRD",     2L,
"Crédito a Otras Sociedades de Depósito (5)",                                          "Crédito a OSD",                        "credito_osd",           "Indicadores BCRD",     2L,
"VALORES EN CIRCULACION (6)",                                 "Valores en circulación",             "valores_en_circulacion",           "Indicadores BCRD",     1L,
"Descuento en Valores Emitidos",                          "Descuento en valores emitidos",               "descuento_en_valores",           "Indicadores BCRD",     2L,
"DEPOSITOS REMUNERADOS DE CORTO PLAZO",                               "Depósitos remunerados CP",        "depositos_remunerados_corto",           "Indicadores BCRD",     1L,
"BASE MONETARIA RESTRINGIDA",                             "Base monetaria restringida",         "base_monetaria_restringida",             "Base monetaria",     1L,
"Billetes y Monedas Emitidos",                            "Billetes y monedas emitidos",                   "billetes_monedas",             "Base monetaria",     2L,
"De los que: Tenencias OSD en MN",                              "Billetes y monedas en OSD",            "billetes_monedas_osd_mn",             "Base monetaria",     3L,
"Depósitos Encaje Legal y Saldos de Compensación de OSD en BC (MN)",                           "Depositos encaje legal en MN",   "depositos_encaje_compensacion_mn",             "Base monetaria",     2L,
"Valores del BCRD en posesión de las OSD para fines de encaje legal (MN)",                    "Valores del BCRD en OSD para encaje",      "valores_bcrd_en_osd_encaje_mn",             "Base monetaria",     2L,
"BASE MONETARIA AMPLIADA",                                "Base monetaria ampliada",            "base_monetaria_ampliada",             "Base monetaria",     1L,
"Base Monetaria Restringida",                             "Base monetaria restringida",                   "base_restringida",             "Base monetaria",     2L,
"Depósitos Encaje Legal y Saldos de Compensación de OSD en BC (ME)",                           "Depósitos encaje legal en ME",   "depositos_encaje_compensacion_me",             "Base monetaria",     2L,
"Depósitos Remunerados de Corto Plazo (Overnight)",                                    "Depósitos Overnight",    "depositos_remunerados_overnight",             "Base monetaria",     2L,
"Depósitos Remunerados de Corto Plazo en ME",                         "Depósitos remunerados CP en ME",           "depositos_remunerados_me",             "Base monetaria",     2L,
"Otros Depósitos de OSD en BCRD",                         "Otros depósitos de OSD en BCRD",          "otros_depositos_osd_en_bc",             "Base monetaria",     2L,
"Valores a Corto Plazo emitidos por BC en manos de las OSD (MN y ME)",                          "Valores de CP del BCRD en OSD",     "valores_corto_plazo_bc_en_osde",             "Base monetaria",     2L,
"MEDIO CIRCULANTE (M1)",                                       "Medio círculante",                                 "m1",       "Agregados monetarios",     1L,
"Billetes y monedas en poder del público",                 "Billetes y monedas en poder de público",                "billetes_monedas_pp",       "Agregados monetarios",     2L,
"Depósitos Transferibles en MN",                          "Depósitos transferibles en MN",         "depositos_transferibles_mn",       "Agregados monetarios",     2L,
"OFERTA MONETARIA AMPLIADA (M2)",                              "Oferta monetaria ampliada",                                 "m2",       "Agregados monetarios",     1L,
"Medio Circulante (M1)",                                                     "M1",                                 "m1",       "Agregados monetarios",     2L,
"Otros depósitos M/N",                                  "Otros depósitos en MN",                 "otros_depositos_mn",       "Agregados monetarios",     2L,
"Valores distintos de acciones MN-emitidos por OSD",      "Valores distintos de acciones MN-emitidos por OSD",      "valores_no_acciones_de_osd_mn",       "Agregados monetarios",     2L,
"Valores distintos de acciones MN- emitidos por el BCRD", "Valores distintos de acciones MN- emitidos por el BCRD",     "valores_no_acciones_de_bcrd_mn",       "Agregados monetarios",     2L,
"DINERO EN SENTIDO AMPLIO (M3)",                               "Dinero en sentido amplio",                                 "m3",       "Agregados monetarios",     1L,
"Oferta Monetaria Ampliada (M2)",                              "Oferta monetaria ampliada",                                 "m2",       "Agregados monetarios",     2L,
"Otros depósitos M/E",                                  "Otros depósitos en ME",                 "otros_depositos_me",       "Agregados monetarios",     2L,
"Valores distintos de acciones ME",                    "Valores distintos de acciones en ME",             "valores_no_acciones_me",       "Agregados monetarios",     2L,
"K2.1 = M1/BM restringida",                                                     "K1",                               "k2.1", "Multiplicadores monetarios",     1L,
"K2.2 = M2/BM restringida",                                                     "K2",                               "k2.2", "Multiplicadores monetarios",     1L,
"K2.3 = M3/BM ampliada",                                                     "K3",                               "k2.3", "Multiplicadores monetarios",     1L,
"TASA DE CAMBIO",                                         "Tasa de cambio",                        "tasa_cambio",             "Tipo de cambio",     1L
)
}
clipr::write_clip(elements)
